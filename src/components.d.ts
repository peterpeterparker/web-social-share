/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { WebSocialShareInput } from "./types/input";
export { WebSocialShareInput } from "./types/input";
export namespace Components {
    interface WebSocialShare {
        /**
          * The share options
         */
        "share": WebSocialShareInput;
        /**
          * Trigger the display, or close, of the action sheet which contains the social-share options
         */
        "show": boolean;
    }
}
export interface WebSocialShareCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWebSocialShareElement;
}
declare global {
    interface HTMLWebSocialShareElementEventMap {
        "closed": void;
    }
    interface HTMLWebSocialShareElement extends Components.WebSocialShare, HTMLStencilElement {
        addEventListener<K extends keyof HTMLWebSocialShareElementEventMap>(type: K, listener: (this: HTMLWebSocialShareElement, ev: WebSocialShareCustomEvent<HTMLWebSocialShareElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLWebSocialShareElementEventMap>(type: K, listener: (this: HTMLWebSocialShareElement, ev: WebSocialShareCustomEvent<HTMLWebSocialShareElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLWebSocialShareElement: {
        prototype: HTMLWebSocialShareElement;
        new (): HTMLWebSocialShareElement;
    };
    interface HTMLElementTagNameMap {
        "web-social-share": HTMLWebSocialShareElement;
    }
}
declare namespace LocalJSX {
    interface WebSocialShare {
        /**
          * An event triggered when the modal is `closed`
         */
        "onClosed"?: (event: WebSocialShareCustomEvent<void>) => void;
        /**
          * The share options
         */
        "share"?: WebSocialShareInput;
        /**
          * Trigger the display, or close, of the action sheet which contains the social-share options
         */
        "show"?: boolean;
    }
    interface IntrinsicElements {
        "web-social-share": WebSocialShare;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "web-social-share": LocalJSX.WebSocialShare & JSXBase.HTMLAttributes<HTMLWebSocialShareElement>;
        }
    }
}
